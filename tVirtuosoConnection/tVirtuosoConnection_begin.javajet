<%@ jet 
imports="
    org.talend.core.model.process.INode 
    org.talend.core.model.process.ElementParameterParser 
    org.talend.designer.codegen.config.CodeGeneratorArgument
" 
%>
////////////////////////////////////////////////////////////////////
//Include "../../../templates/DB/HelpClass/HelpClass.javajet"
////////////////////////////////////////////////////////////////////


<%
	class DefaultConnectionUtil {
	
		protected String cid ;
		protected String dbproperties ;
		protected String dbhost;
	    protected String dbport;
	    protected String dbname;
	    
	    public void beforeComponentProcess(INode node){
	    }
	    
		public void createURL(INode node) {
			cid = node.getUniqueName();
			dbproperties = ElementParameterParser.getValue(node, "__PROPERTIES__");
			dbhost = ElementParameterParser.getValue(node, "__HOST__");
	    	dbport = ElementParameterParser.getValue(node, "__PORT__");
	    	dbname = ElementParameterParser.getValue(node, "__DBNAME__");
		}
		
		public String getDirverClassName(INode node){
			return "";
		}
		
		public void classForName(INode node){
%>
			java.lang.Class.forName("<%=this.getDirverClassName(node)%>");
<%
		}
		
		public void useShareConnection(INode node) {
			String sharedConnectionName = ElementParameterParser.getValue(node, "__SHARED_CONNECTION_NAME__");
%>
			String sharedConnectionName_<%=cid%> = <%=sharedConnectionName%>;
			conn_<%=cid%> = SharedDBConnection.getDBConnection("<%=this.getDirverClassName(node)%>",url_<%=cid%>,userName_<%=cid%> , password_<%=cid%> , sharedConnectionName_<%=cid%>);
<%
		}
		
		public void createConnection(INode node) {
%>
		conn_<%=cid%> = java.sql.DriverManager.getConnection(url_<%=cid%>,userName_<%=cid%>,password_<%=cid%>);
<%
		}
		
		public void setAutoCommit(INode node) {
			boolean setAutoCommit = "true".equals(ElementParameterParser.getValue(node, "__AUTO_COMMIT__"));
%>
			conn_<%=cid%>.setAutoCommit(<%=setAutoCommit%>);
<%
		}
		
		public void afterComponentProcess(INode node){
	    }
	}//end DefaultUtil class
	
	DefaultConnectionUtil connUtil = new DefaultConnectionUtil();
%>


////////////////////////////////////////////////////////////////////


<%
	class ConnectionUtil extends DefaultConnectionUtil{
	
		String driverJar;
		
		public void beforeComponentProcess(INode node){
			driverJar = ElementParameterParser.getValue(node, "__DRIVER_JAR__");
	    }
	    
		public void createURL(INode node) {
			super.createURL(node);
			
			String jdbcHost = ElementParameterParser.getValue(node, "__HOST__");
			String jdbcPort = ElementParameterParser.getValue(node, "__PORT__");
			String jdbcDb = ElementParameterParser.getValue(node, "__DATABASE__");
			String jdbcUser = ElementParameterParser.getValue(node, "__USER__");
			String jdbcPass = ElementParameterParser.getValue(node, "__PASS__");
%>
		
			String host_<%=cid %> = <%=jdbcHost%>;
			String port_<%=cid %> = <%=jdbcPort%>;
			String db_<%=cid %> = <%=jdbcDb%>;
			String user_<%=cid %> = <%=jdbcUser%>;
			String pass_<%=cid %> = <%=jdbcPass%>;
			String url_<%=cid %> = "jdbc:virtuoso://" + host_<%=cid %> + ":" + port_<%=cid %> + "/DATABASE=" + db_<%=cid %> + "/UID=" + user_<%=cid %> + "/PWD=" + pass_<%=cid %>;
<%	
		}
		
		public String getDirverClassName(INode node){
			return ("virtuoso.jdbc3.Driver");
		}
		public void classForName(INode node){
%>
		java.lang.Class.forName("virtuoso.jdbc3.Driver");
<%
		}
		
		public void useShareConnection(INode node) {
			String sharedConnectionName = ElementParameterParser.getValue(node, "__SHARED_CONNECTION_NAME__");
%>
			String sharedConnectionName_<%=cid%> = <%=sharedConnectionName%>;
			conn_<%=cid%> = SharedDBConnection.getDBConnection(<%=this.getDirverClassName(node)%>,url_<%=cid%>,userName_<%=cid%> , password_<%=cid%> , sharedConnectionName_<%=cid%>);
<%
		}
		
		public void setAutoCommit(INode node) {
			boolean useTransaction = ("true").equals(ElementParameterParser.getValue(node,"__IS_USE_AUTO_COMMIT__"));
			boolean setAutoCommit = "true".equals(ElementParameterParser.getValue(node, "__AUTO_COMMIT__"));
			if (useTransaction) {
%>
			conn_<%=cid%>.setAutoCommit(<%=setAutoCommit%>);
<%
			}
		}
		
	}//end class
	connUtil = new ConnectionUtil();
	
%>
<%//----------------------------component codes-----------------------------------------%>


///////////////////////////////////////////////////////////////////////////
// "../../../templates/DB/AbstractDBConnection.javajet"
///////////////////////////////////////////////////////////////////////////

<%
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
	
    String cid = node.getUniqueName();
    String dbhost = ElementParameterParser.getValue(node, "__HOST__");
    String dbport = ElementParameterParser.getValue(node, "__PORT__");
    String dbschema = ElementParameterParser.getValue(node, "__DB_SCHEMA__");
    if(dbschema == null||dbschema.trim().length()==0) {
    	 dbschema = ElementParameterParser.getValue(node, "__SCHEMA_DB__");
    }
    String dbname = ElementParameterParser.getValue(node, "__DBNAME__");
    String dbuser = ElementParameterParser.getValue(node, "__USER__");
    String dbpass = ElementParameterParser.getValue(node, "__PASS__");
    String encoding = ElementParameterParser.getValue(node, "__ENCODING__");
    
	boolean isUseSharedConnection = ("true").equals(ElementParameterParser.getValue(node, "__USE_SHARED_CONNECTION__"));
%>
<%
	connUtil.beforeComponentProcess(node);
	
	connUtil.createURL(node);
%>

	String userName_<%=cid%> = <%=(dbuser != null && dbuser.trim().length() == 0)? "null":dbuser%>;<%//the tSQLiteConnection component not contain user and pass return null%>
	String password_<%=cid%> = <%=(dbpass != null && dbpass.trim().length() == 0)? "null":dbpass%>;

	java.sql.Connection conn_<%=cid%> = null;

<%
	if(isUseSharedConnection){
%>
	<%connUtil.useShareConnection(node);%>
<%
	} else {
		String alias = ElementParameterParser.getValue(node, "__DATASOURCE_ALIAS__");
%>

	if ((null == globalMap.get(KEY_DB_DATASOURCES)) || "".equals(<%=(null != alias && !("".equals(alias)))?alias:"\"\""%>)) {
		<%connUtil.classForName(node);%>
		<%connUtil.createConnection(node);%>
		globalMap.put("conn_<%=cid%>", conn_<%=cid%>);
	}
<%
	}
%>
	if (null != conn_<%=cid%>) {
		<%connUtil.setAutoCommit(node);%>
	}
<%
	connUtil.afterComponentProcess(node);
%>


///////////////////////////////////////////////////////////////////////////
	
	globalMap.put("conn_<%=cid %>", conn_<%=cid %>);
	globalMap.put("url_<%=cid %>", url_<%=cid%>);
	//globalMap.put("user_<%=cid %>", userName_<%=cid %>);
	//globalMap.put("pass_<%=cid %>", password_<%=cid %>);
