<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List
		java.util.ArrayList
    	java.util.Map
        org.talend.core.model.process.IConnectionCategory
        org.talend.core.model.utils.NodeUtil
    " 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    String startColumn = ElementParameterParser.getValue(node, "__GROUP_START_COLUMN__");
    String positionColumn = ElementParameterParser.getValue(node, "__POSITION_COLUMN__");
    boolean usePositionColumn = (positionColumn != null && positionColumn.isEmpty() == false) && 
    							"true".equals(ElementParameterParser.getValue(node, "__ACTIVATE_POSITION_COLUMN__"));
    int groupSize = Integer.parseInt(ElementParameterParser.getValue(node, "__GROUP_SIZE__"));
    int numberRepetition = Integer.parseInt(ElementParameterParser.getValue(node, "__NUMBER_REPEATION__"));
	String incomingConnName = null;
	String outgoingConnName = null;
	IMetadataTable metadata = null;
	List<? extends IConnection> inConns = node.getIncomingConnections();
	if (inConns != null && inConns.isEmpty() == false) {
    	IConnection inConn = inConns.get(0);
    	incomingConnName = inConn.getName();
    	metadata = inConn.getMetadataTable();
	}
	List<? extends IConnection> outConns = NodeUtil.getOutgoingConnections(node, IConnectionCategory.DATA);
	if (outConns != null && outConns.isEmpty() == false) {
    	IConnection outConn = outConns.get(0);
    	outgoingConnName = outConn.getName();
	}
%>    	
	nb_line_in_<%=cid%>++;
<%	if (metadata != null && incomingConnName != null && outgoingConnName != null) { %>
	// start normalizing with field <%=startColumn%>
	// including next <%=groupSize%> fields
	for (int numberRepetition_<%=cid%> = 0; numberRepetition_<%=cid%> < <%=numberRepetition%>; numberRepetition_<%=cid%>++) {
		nb_line_out_<%=cid%>++;
		<%=outgoingConnName%> = new <%=outgoingConnName%>Struct();
		normalizeSchemaHelper_<%=cid%>.fill(<%=incomingConnName%>, <%=outgoingConnName%>, numberRepetition_<%=cid%>);
<%  } %>