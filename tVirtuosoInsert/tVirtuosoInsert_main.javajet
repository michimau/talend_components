<%@ jet 
imports="
    org.talend.core.model.process.INode
    org.talend.core.model.process.ElementParameterParser
    org.talend.core.model.metadata.IMetadataTable
    org.talend.core.model.metadata.IMetadataColumn
    org.talend.designer.codegen.config.CodeGeneratorArgument
    org.talend.core.model.process.IConnection
    org.talend.core.model.process.IConnectionCategory
    java.util.List
	java.util.Map
	java.util.Set
	java.util.HashSet
"
%>

<%
CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
INode node = (INode) codeGenArgument.getArgument();
String cid =  node.getUniqueName();

String dieOnError = ElementParameterParser.getValue(node, "__DIE_ON_ERROR__");
String useBulkLoad = ElementParameterParser.getValue(node, "__USE_BULK_LOAD__");

String graph= ElementParameterParser.getValue(node, "__GRAPH__");
String ntriples= ElementParameterParser.getValue(node, "__NTRIPLES__");
//String dbquery= ElementParameterParser.getValue(node, "__QUERY__");
String dbquery= "sparql insert into <http://graph2> {  }";
		dbquery = dbquery.replaceAll("\n"," ");
		dbquery = dbquery.replaceAll("\r"," ");

String incomingConnName = null;
Set<String> inputCols = new HashSet<String>();

List<IMetadataColumn> columnList = null;

String rejectConnName = null;
List<? extends IConnection> rejectConns = node.getOutgoingConnections("REJECT");
if(rejectConns != null && rejectConns.size() > 0) {
    IConnection rejectConn = rejectConns.get(0);
    rejectConnName = rejectConn.getName();
}
List<IMetadataColumn> rejectColumnList = null;
IMetadataTable metadataTable = node.getMetadataFromConnector("REJECT");
if(metadataTable != null) {
    rejectColumnList = metadataTable.getListColumns();      
}

List<? extends IConnection> outgoingConns = node.getOutgoingSortedConnections();

boolean hasOutgoingDataConnection = false;
for(IConnection conn : outgoingConns) {
    if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
		if(!hasOutgoingDataConnection){
			hasOutgoingDataConnection = true;
		}
		%>    
		<%=conn.getName() %> = null;            
		<%      
    }
}
%>

<%
if (("false").equals(useBulkLoad)) {
%>
	query_<%=cid %> = "sparql insert into <"+<%=graph%>+"> { "+<%=ntriples%>+" }";
<%
} else {
%>
	query_<%=cid %> = <%=ntriples%>;
<%
}
%>

whetherReject_<%=cid%> = false;


<%
List<IMetadataTable> metadatas = node.getMetadataList();
if ((metadatas != null) && (metadatas.size() > 0)) {
    IMetadataTable metadata = metadatas.get(0);
    if (metadata != null) {
        List<? extends IConnection> inConnections = node.getIncomingConnections();
        columnList = metadata.getListColumns();
		if(inConnections != null && inConnections.size()>0){
			IConnection conn = inConnections.get(0);
			if (conn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {
				incomingConnName = conn.getName();
				IMetadataTable inputMetadataTable = conn.getMetadataTable();
				for (IMetadataColumn inputCol : inputMetadataTable.getListColumns()) {
					inputCols.add(inputCol.getLabel());
				}
			}
		}//end of connection size.
	}//end of metadatas
}

%>
globalMap.put("<%=cid %>_QUERY",query_<%=cid %>);

<%
if (("false").equals(useBulkLoad)) {
%>
try {

    	stmt_<%=cid %>.execute(query_<%=cid %>);
    	
    } catch (java.lang.Exception e) {
        whetherReject_<%=cid%> = true;
        <%
        if (("true").equals(dieOnError)) {
            %>
            throw(e);
            <%
        } else {
            if(rejectConnName != null && rejectColumnList != null && rejectColumnList.size() > 0) {
                %>
                <%=rejectConnName %> = new <%=rejectConnName %>Struct();
                <%
                if(incomingConnName!=null){
	                for(IMetadataColumn column : columnList) {
	                	if (inputCols.contains(column.getLabel())) {
	                    %>
	                    	<%=rejectConnName%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
	                    <%
	                    }
	                }
                }
                %>
                <%=rejectConnName%>.errorCode = ((java.sql.SQLException)e).getSQLState();
                <%=rejectConnName%>.errorMessage = e.getMessage() + " - Line: " + tos_count_<%=node.getUniqueName() %>;
                <%
            } else {
                %>
                System.err.print(e.getMessage());
                <%
            }
        } 
        %>
    }
<%
} else {
%>

	loadTriples_<%=cid%> = loadTriples_<%=cid%> + query_<%=cid %>;


<%
} // close else du bulk load

if(outgoingConns != null && outgoingConns.size() > 0) {
    %>
    if(!whetherReject_<%=cid%>) {
        <%
        for(IConnection outgoingConn : outgoingConns) {
            if(rejectConnName == null || (rejectConnName != null && !outgoingConn.getName().equals(rejectConnName))) {
                if(outgoingConn.getLineStyle().hasConnectionCategory(IConnectionCategory.DATA)) {                    
                    %>
                    <%=outgoingConn.getName()%> = new <%=outgoingConn.getName()%>Struct();
                    <%
                    for(IMetadataColumn column : columnList) {
                    		if(incomingConnName!=null){
                    			if (inputCols.contains(column.getLabel())) {
                    	    	%>
                    	    		<%=outgoingConn.getName()%>.<%=column.getLabel()%> = <%=incomingConnName%>.<%=column.getLabel()%>;
                    	    	<%
                    	    	}
                    	    }
                    }   
                }
            }
        }
        %>
    }
<%
}
%>
