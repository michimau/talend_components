<%@ jet 
	imports="
		org.talend.core.model.process.INode 
		org.talend.core.model.process.ElementParameterParser 
		org.talend.core.model.metadata.IMetadataTable 
		org.talend.core.model.metadata.IMetadataColumn 
		org.talend.core.model.process.IConnection
		org.talend.core.model.process.IConnectionCategory
		org.talend.designer.codegen.config.CodeGeneratorArgument
		org.talend.core.model.metadata.types.JavaTypesManager
		org.talend.core.model.metadata.types.JavaType
		java.util.List 
    	java.util.Map		
	" 
%>
<% 
    CodeGeneratorArgument codeGenArgument = (CodeGeneratorArgument) argument;
    INode node = (INode)codeGenArgument.getArgument();
    String cid = node.getUniqueName();
    String host = ElementParameterParser.getValue(node,"__HOST__");
    String port = ElementParameterParser.getValue(node,"__PORT__");
    String cluster = ElementParameterParser.getValue(node,"__CLUSTER__");
    String keySpace = ElementParameterParser.getValue(node,"__KEY_SPACE__");    
%>
    me.prettyprint.hector.api.HConsistencyLevel consistencyLevel_<%=cid%> = me.prettyprint.hector.api.HConsistencyLevel.ONE;
    me.prettyprint.cassandra.model.ConfigurableConsistencyLevel clpolicy_<%=cid%> = new me.prettyprint.cassandra.model.ConfigurableConsistencyLevel();
    me.prettyprint.cassandra.service.CassandraHostConfigurator hosts_<%=cid%> = new me.prettyprint.cassandra.service.CassandraHostConfigurator(<%=host%>);
    hosts_<%=cid%>.setAutoDiscoverHosts(true);
    me.prettyprint.hector.api.Cluster cluster_<%=cid%> = me.prettyprint.hector.api.factory.HFactory.getOrCreateCluster(<%=cluster%>,hosts_<%=cid%>);
    clpolicy_<%=cid%>.setDefaultWriteConsistencyLevel(consistencyLevel_<%=cid%>);
    me.prettyprint.hector.api.Keyspace keyspace_<%=cid%> = me.prettyprint.hector.api.factory.HFactory.createKeyspace(<%=keySpace%>, cluster_<%=cid%>,clpolicy_<%=cid%>);
    me.prettyprint.cassandra.serializers.StringSerializer serializer_<%=cid%> = new me.prettyprint.cassandra.serializers.StringSerializer();
    me.prettyprint.hector.api.mutation.Mutator<String> mutator_<%=cid%> = me.prettyprint.hector.api.factory.HFactory.createMutator(keyspace_<%=cid%>, serializer_<%=cid%>);
    int batchCounter_<%=cid%> = 0;
    